@inherits BunitTestContext

@code {
	/// <summary>
	/// Very basic tests to check if I could correctly test with or without authentication
	/// Will be returning to it later and write actual tests with more purpose, but for now this is fine.
	/// </summary>

	[Test]
	public void UnAuthorizedRendersLogIn()
	{
		// Arrange

		ServiceSetups.RegisterJobHuntApi(Services);
		ServiceSetups.RegisterUnauthorizedSetup(Services);
		Services.AddSingleton<IToastService, ToastService>();

		TestContext?.AddTestAuthorization();

		// Act
		var cut = RenderComponent<CascadingAuthenticationState>(parameters => parameters
			.AddChildContent<LoginOrOut>()
		);

		// Assert

		cut.Find("div.name").MarkupMatches(@"<div class=""name"">Guest</div>");
		var loginButton = cut.Find("button.b1");
		Assert.AreEqual("Login", loginButton.TextContent);
	}

	[Test]
	public void AuthorizedRendersLogOut()
	{
		ServiceSetups.RegisterJobHuntApi(Services);
		ServiceSetups.RegisterAuthorizedSetup(Services);
	
		TestContext?.AddTestAuthorization().SetAuthorized("NameOfUser");
		Services.AddSingleton<IToastService, ToastService>();

		var cut = RenderComponent<CascadingAuthenticationState>(parameters => parameters
			.AddChildContent<LoginOrOut>()
		);


		var username = cut.Find("div.name");
		var logoutButton = cut.Find("button.b1");
		Assert.AreEqual("Logout", logoutButton.TextContent);
		Assert.AreEqual("NameOfUser", username.TextContent);

	}
}
