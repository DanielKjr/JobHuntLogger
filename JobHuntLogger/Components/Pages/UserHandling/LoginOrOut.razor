@using System.Diagnostics
@inject NavigationManager NavigationManager

<div class="login-or-out-container">
    <AuthorizeView>
        <Authorized>
            <div class="user-actions">
                <div class="name">@userName</div>
                <button class="b1" @onclick="@(() => NavigationManager.NavigateTo("/Account/LogOut", forceLoad: true))">Logout</button>
            </div>
        </Authorized>
        <NotAuthorized>
            <div class="user-actions">
                <div class="name">@userName</div>
                <button class="b1" @onclick="@(() => NavigationManager.NavigateTo("/Account/Login", forceLoad: true))">Login</button>
            </div>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code{
	[CascadingParameter]
	private Task<AuthenticationState>? AuthenticationStateTask { get; set; }

	private string userName = "Guest";

	protected override async Task OnInitializedAsync()
	{
		var authenticationState = await AuthenticationStateTask;
        if (authenticationState.User.Identity.IsAuthenticated)
		    userName = authenticationState.User.Identities.FirstOrDefault()!.Claims.Where(i => i.Type == "name").FirstOrDefault()!.Value;
	}
}